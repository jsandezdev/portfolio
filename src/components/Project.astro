---
import GradientText from './GradientText.astro'
import TextSeparator from './TextSeparator.astro'
import Tag from './Tag.astro'
import GithubIcon from './icons/Github.astro'
import LinkIcon from './icons/Link.astro'
import type { Project } from '../models/Project.astro'
import ImageModal from './ImageModal.astro'
import { Image } from '@astrojs/image/components'

export interface Props {
    isEven: boolean
    project: Project
}

const { isEven, project } = Astro.props
---

<div
    class='project col-span-2 sm:col-span-1 lg:col-span-2 grid grid-cols-12 bg-gradient-to-r from-jscyan/5 to-jspink/5 rounded-xl bg-opacity-10 overflow-hidden'
    data-aos={`${isEven ? 'fade-left' : 'fade-right'}`}
    data-aos-delay='200'
    data-id={project.id}
>
    <div
        class={`col-span-12 lg:col-span-7 lg:p-5 flex items-stretch ${
            isEven ? 'lg:order-1' : 'lg:order-2'
        }`}
    >
        <div class='relative flex items-stretch'>
            <Image
                class='w-full hover:cursor-zoom-in max-w-full mx-auto lg:mr-0 aspect-square lg:aspect-video object-cover overflow-hidden'
                src={project.image}
                alt={project.title}
                title={project.title}
                width={1920}
                height={1920}
                format='webp'
                loading="lazy"
                decoding='async'
                fetchpriority='low'
            />
            <div class='absolute bottom-2 right-2 flex flex-row gap-3 items-center'>
                {
                    project.github && (
                        <a
                            class='inline-block text-jspurple-default hover:text-jsgrey transition-all'
                            href={project.github}
                            aria-label='Accede al cÃ³digo del proyecto en GitHub'
                            target='_blank'
                        >
                            <GithubIcon />
                        </a>
                    )
                }
                {
                    project.link && (
                        <a
                            class='inline-block text-jspurple-default hover:text-jsgrey transition-all'
                            href={project.link}
                            aria-label='Enlace a la web del proyecto'
                            target='_blank'
                        >
                            <LinkIcon />
                        </a>
                    )
                }
            </div>
        </div>
    </div>
    <div
        class={`col-span-12 lg:col-span-5 p-5 flex flex-col justify-center ${
            isEven ? 'lg:order-2' : 'lg:order-1'
        }`}
    >
        <span class='mb-1 block font-bold text-lg uppercase'>
            <GradientText>{project.title}</GradientText>
        </span>
        <span class='mb-2 block text-md text-jswhite font-bold'>{project.subtitle}</span>
        <TextSeparator size='sm' class='mb-4' />
        <p class='text-jslightgrey mb-8' set:html={project.content}></p>
        <div class='tags flex flex-row flex-wrap gap-2'>
            {project.tags.map((tag) => <Tag label={tag.label} icon={tag.icon} class={tag.class} />)}
        </div>
    </div>
</div>

<ImageModal
    id={`project-${project.id}-modal`}
    title={project.title}
    image={project.image}
/>
