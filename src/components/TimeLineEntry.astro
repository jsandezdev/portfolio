---
import GradientText from './GradientText.astro'

export interface EntryContent {
    title: string;
}

export interface Entry {
    label: string;
    title: string;
    title2: string;
    subtitle: string;
    content: Array<EntryContent>;
    entry: object;
}

export interface Props {
    isEven: boolean;
    entry: Entry;
}

const { isEven, entry } = Astro.props
---

<div class="grid grid-cols-11 mb-10 lg:my-20 bg-gradient-to-r from-jscyan/5 to-jspink/5 p-5 lg:p-0 rounded-xl bg-opacity-10 lg:bg-none">
    <div class={`col-span-11 lg:col-span-5 text-start mb-2 ${isEven ? 'lg:order-1 lg:text-end' : 'lg:order-3 lg:text-start'}`}>
        <span class="inline-block lg:bg-gradient-to-r from-jscyan to-jspink text-jswhite mb-2 lg:mb-0 lg:text-jswhite lg:rounded-full lg:px-8 lg:py-3 lg:font-bold">{entry.label}</span>
    </div>
    <div class="hidden lg:block col-span-1 text-center z-20 order-2 mt-4">
        <span class="rounded-full bg-jsyellow w-4 h-4 inline-block"></span>
    </div>
    <div class={`col-span-11 lg:col-span-5 text-start ${isEven ? 'order-3' : 'order-1'} lg:bg-gradient-to-r from-jscyan/5 to-jspink/5 lg:p-5 lg:rounded-xl lg:bg-opacity-10`}>
        <span class="mb-1 block font-bold text-lg"><span class="mr-2">{entry.title}</span><GradientText>{entry.title2}</GradientText></span>
        <span class="mb-3 block text-sm text-jslightgrey">{entry.subtitle}</span>
        <ul class="grid grid-cols-1 gap-1 list-style-circled text-jslightgrey">
            { entry.content.map((e, idx) => (
                <li>{e.title}</li>
            )) }
        </ul>
    </div>
</div>
